domain T24 {
	use common.CoreCommands.*
	use common.HTTPEvents.*
	use common.ODataCommands.*
	use common.T24Commands.*
	use common.T24Events.*
	use common.NextState.*
	use common.Errors.*
	use T24.ContextEnquiry.*
	rim verAccount {
		command T24FieldMetadata
		command NoopGET
		command GETEntities
		command GetLiveEntity
		command GetIauthEntity
		command GetHauthEntity
		command GetIauthEntities
		command CreateEntity
		command InputEntity
		command HoldEntity
		command AuthoriseEntity
		command GetChangedValues
		command ReviewEntity
		command ReverseEntity
		command ValidateEntity
		command RestoreEntity
		command DeleteEntity
		command CopyEntity
		command PasteEntity
		command CreateDEPreview
		command GetDealSlipEntities
		command T24Enrichment
		command CheckAutoIdSupport
		command GetHauthEntities
		command T24NextState
		basepath: "/{companyid}"
	
		resource verAccount_errorHandler {
			type: item
			entity: verAccount
			commands [ GET : NoopGET ]
			relations [ "http://temenostech.temenos.com/rels/error" ]
			path: "/verAccounts('{id}')/error"
			GET +-> ProcessErrors {
				title: "errors"
			}
			POST +-> verAccount_metadata {
				title: "metadata"
			}
		}
	
		resource verAccounts {
			type: collection
			entity: verAccount
			commands [ GET : GETEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verAccounts()"
			GET *-> verAccount {
				parameters [ id = "{AccountNumber}" ]
			}
			GET *-> verAccount_see {
				parameters [ id = "{AccountNumber}" ]
				title: "see record"
			}
			POST -> verAccount_new {
				title: "create new deal"
				condition: OK(verAccount_autoId)
			}
			POST -> verAccount_populate {
				title: "populate existing deal"
			}
			PUT *-> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST *-> verAccount_audit {
				parameters [ id = "{AccountNumber}" ]
				title: "audit deal"
			}
			POST *-> verAccount_reverse {
				parameters [ id = "{AccountNumber}" ]
				title: "reverse deal"
			}
		}
	
		resource verAccount {
			type: item
			entity: verAccount
			commands [ GET : GetLiveEntity ]
			path: "/verAccounts('{id}')"
			POST +-> verAccount_metadata {
				title: "metadata"
			}
			GET --> verAccount_IAuth {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount_IAuth)
			}
			POST -> verAccount_validate {
				parameters [ id = "{AccountNumber}" ]
				title: "validate deal"
			}
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST -> verAccount_audit {
				parameters [ id = "{AccountNumber}" ]
				title: "audit deal"
			}
			POST -> verAccount_reverse {
				parameters [ id = "{AccountNumber}" ]
				title: "reverse deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
		}
	
		resource verAccount_see {
			type: item
			entity: verAccount
			commands [ GET : GetLiveEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verAccount","http://temenostech.temenos.com/rels/see" ]
			path: "/verAccounts('{id}')/see"
			POST +-> verAccount_metadata {
				title: "metadata"
			}
		}
	
		resource verAccount_IAuth_see {
			type: item
			entity: verAccount
			commands [ GET : GetIauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verAccount_IAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verAccounts_IAuth('{id}')/see"
		}
	
		resource verAccount_HAuth_see {
			type: item
			entity: verAccount
			commands [ GET : GetHauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verAccount_HAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verAccounts_HAuth('{id}')/see"
		}
	
		resource verAccount_ContextEnquiries {
			type: item
			entity: verAccount
			commands [ GET : NoopGET ]
			path: "/verAccount/ContextEnquiries"
			GET -> "T24.enqlistAccount.enqlistAccounts" {
				parameters [ param = "list" ]
				title: "List live deals"
			}
			GET -> "T24.enqlistAccount.enqlistAccountsUnauth" {
				parameters [ param = "list" ]
				title: "List unauthorised deals"
			}
			GET -> "T24.enqlistAccount.enqlistAccountsHist" {
				parameters [ param = "list" ]
				title: "List history deals"
			}
			GET -> "T24.enqlistAccount.enqlistAccounts" {
				title: "Search live deals"
			}
			GET -> "T24.enqlistAccount.enqlistAccountsUnauth" {
				title: "Search unauthorised deals"
			}
			GET -> "T24.enqlistAccount.enqlistAccountsHist" {
				title: "Search history deals"
			}
			GET +-> "ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Other context Enquiries"
			}
		}
	
		resource verAccount_metadata {
			type: collection
			entity: T24FieldMetadata
			commands [ POST : T24FieldMetadata ]
			relations [ "http://temenostech.temenos.com/rels/metadata" ]
			path: "/verAccounts()/metadata"
		}
	
		resource verAccounts_IAuth {
			type: collection
			entity: verAccount
			commands [ GET : GetIauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verAccounts_IAuth()"
			GET *-> verAccount_IAuth {
				parameters [ id = "{AccountNumber}" ]
			}
			POST -> verAccount_new {
				title: "create new deal"
				condition: OK(verAccount_autoId)
			}
			POST -> verAccount_populate {
				title: "populate existing deal"
			}
			PUT *-> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			DELETE *-> verAccount_delete {
				parameters [ id = "{AccountNumber}" ]
				title: "delete"
			}
			PUT *-> verAccount_authorise {
				parameters [ id = "{AccountNumber}" ]
				title: "authorise deal"
			}
		}
	
		resource verAccount_new {
			type: item
			entity: verAccount
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verAccount","http://temenostech.temenos.com/rels/new" ]
			path: "/verAccounts()/new"
			POST +-> verAccount_metadata {
				title: "metadata"
			}
			POST -> verAccount_validate {
				parameters [ id = "{AccountNumber}" ]
				title: "validate deal"
			}
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST -> verAccount_hold {
				parameters [ id = "{AccountNumber}" ]
				title: "hold deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
		}
	
		resource verAccount_input {
			type: item
			entity: verAccount
			commands [ PUT : InputEntity, POST : InputEntity ]
			relations [ "http://temenostech.temenos.com/rels/input" ]
			path: "/verAccounts('{id}')"
			GET --> nextState {
				condition: OK(nextState)
			}
			GET --> verAccount_IAuth {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount_IAuth)
			}
			GET --> verAccount {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
			onerror --> T24.verAccount.verAccount_errorHandler
		}
	
		resource verAccount_hold {
			type: item
			entity: verAccount
			commands [ POST : HoldEntity ]
			relations [ "http://temenostech.temenos.com/rels/hold" ]
			path: "/verAccounts('{id}')/hold"
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			DELETE -> verAccount_delete {
				parameters [ id = "{AccountNumber}" ]
				title: "delete"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verAccount_authorise {
			type: item
			entity: verAccount
			commands [ PUT : AuthoriseEntity ]
			relations [ "http://temenostech.temenos.com/rels/authorise" ]
			path: "/verAccounts('{id}')/authorise"
			GET --> verAccount_IAuth {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount_IAuth)
			}
			GET --> verAccount {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
			onerror --> T24.verAccount.verAccount_errorHandler
		}
	
		resource verAccount_changedValues {
			type: item
			entity: verAccount
			commands [ GET : GetChangedValues ]
			relations [ "http://temenostech.temenos.com/rels/changedValues" ]
			path: "/verAccounts('{id}')/changedValues"
		}
	
		resource verAccount_audit {
			type: item
			entity: verAccount
			commands [ POST : ReviewEntity ]
			relations [ "http://temenostech.temenos.com/rels/review" ]
			path: "/verAccounts('{id}')/review"
			GET -> verAccount {
				parameters [ id = "{AccountNumber}" ]
			}
			onerror --> common.Errors.Errors
		}
	
		resource verAccount_reverse {
			type: item
			entity: verAccount
			commands [ PUT : ReverseEntity ]
			relations [ "http://temenostech.temenos.com/rels/reverse" ]
			path: "/verAccounts('{id}')/reverse"
			GET --> verAccount_IAuth {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount_IAuth)
			}
			GET --> verAccount_HAuth {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount_HAuth)
			}
			onerror --> T24.verAccount.verAccount_errorHandler
		}
	
		resource verAccount_validate {
			type: item
			entity: verAccount
			commands [ POST : ValidateEntity ]
			relations [ "http://temenostech.temenos.com/rels/validate" ]
			path: "/verAccounts('{id}')/validate"
			GET +-> ProcessErrors {
				title: "errors"
				condition: OK(CheckIfError)
			}
			POST +-> verAccount_metadata {
				title: "metadata"
			}
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST -> verAccount_hold {
				parameters [ id = "{AccountNumber}" ]
				title: "hold deal"
			}
		}
	
		resource verAccount_IAuth {
			type: item
			entity: verAccount
			commands [ GET : GetIauthEntity ]
			path: "/verAccounts_IAuth('{id}')"
			POST +-> verAccount_metadata {
				title: "metadata"
			}
			GET +-> verAccount_changedValues {
				parameters [ id = "{AccountNumber}" ]
				title: "changed values"
			}
			POST -> verAccount_validate {
				parameters [ id = "{AccountNumber}" ]
				title: "validate deal"
			}
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST -> verAccount_hold {
				parameters [ id = "{AccountNumber}" ]
				title: "hold deal"
			}
			POST -> verAccount_authorise {
				parameters [ id = "{AccountNumber}" ]
				title: "authorise deal"
			}
			DELETE -> verAccount_delete {
				parameters [ id = "{AccountNumber}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
		}
	
		resource verAccount_delete {
			type: item
			entity: verAccount
			commands [ DELETE : DeleteEntity ]
			relations [ "http://temenostech.temenos.com/rels/delete" ]
			path: "/verAccounts('{id}')/delete"
		}
	
		resource verAccountEntry {
			type: item
			entity: verAccount
			commands [ GET : NoopGET ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verAccount","http://temenostech.temenos.com/rels/contract" ]
			path: "/verAccountEntry"
			POST -> verAccount_new {
				title: "create new deal"
				condition: OK(verAccount_autoId)
			}
			POST -> verAccount_populate {
				title: "populate existing deal"
			}
			GET -> "verAccount_see" {
				parameters [ id = "@" ]
				title: "See transaction"
			}
			GET -> "verAccount_IAuth_see" {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET -> "verAccount_HAuth_see" {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET -> "verAccount_IAuth" {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET -> "verAccount_HAuth" {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET +-> "verAccount_ContextEnquiries" {
				title: "All context Enquiries"
			}
			POST -> verAccount_copy {
				title: "Copy deal"
			}
			POST -> verAccount_paste {
				title: "Paste deal"
			}
		}
	
		resource verAccount_populate {
			type: item
			entity: verAccount
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verAccount","http://temenostech.temenos.com/rels/populate" ]
			path: "/verAccounts()/populate"
			POST -> verAccount_validate {
				parameters [ id = "{AccountNumber}" ]
				title: "validate deal"
			}
			POST -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			DELETE -> verAccount_delete {
				parameters [ id = "{AccountNumber}" ]
				title: "delete"
				condition: OK(verAccount_IAuth)
			}
			POST -> verAccount_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
		}
	
		resource verAccount_copy {
			type: item
			entity: verAccount
			commands [ POST : CopyEntity ]
			relations [ "http://temenostech.temenos.com/rels/copy" ]
			path: "/verAccounts()/copy"
		}
	
		resource verAccount_paste {
			type: item
			entity: verAccount
			commands [ POST : PasteEntity ]
			relations [ "http://temenostech.temenos.com/rels/paste" ]
			path: "/verAccounts()/paste"
			POST +-> verAccount_metadata {
				title: "metadata"
			}
			POST -> verAccount_validate {
				parameters [ id = "{AccountNumber}" ]
				title: "validate deal"
			}
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST -> verAccount_hold {
				parameters [ id = "{AccountNumber}" ]
				title: "hold deal"
			}
		}
	
		resource verAccounts_enrichment {
			type: item
			entity: Enrichment
			commands [ GET : T24Enrichment {
				properties [ entity = "verAccount" ]
				} ]
			relations [ "http://temenostech.temenos.com/rels/enrichment" ]
			path: "/verAccounts()/enrichment"
		}
	
		resource verAccount_autoId {
			type: item
			entity: verAccount
			commands [ GET : CheckAutoIdSupport ]
		}
	
		resource verAccount_restore {
			type: item
			entity: verAccount
			commands [ POST : RestoreEntity ]
			relations [ "http://temenostech.temenos.com/rels/restore" ]
			path: "/verAccounts('{id}')/restore"
			GET --> verAccount_IAuth {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount_IAuth)
			}
			GET --> verAccount {
				parameters [ id = "{AccountNumber}" ]
				condition: OK(verAccount)
			}
			POST -> verAccount_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verAccounts_HAuth {
			type: collection
			entity: verAccount
			commands [ GET : GetHauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verAccounts_HAuth()"
			GET *-> verAccount_HAuth {
				parameters [ id = "{AccountNumber}" ]
			}
			POST -> verAccount_new {
				title: "create new deal"
				condition: OK(verAccount_autoId)
			}
			POST -> verAccount_populate {
				title: "populate existing deal"
			}
			POST *-> verAccount_restore {
				parameters [ id = "{AccountNumber}" ]
				title: "restore deal"
			}
		}
	
		resource verAccount_HAuth {
			type: item
			entity: verAccount
			commands [ GET : GetHauthEntity ]
			path: "/verAccounts_HAuth('{id}')"
			POST +-> verAccount_metadata {
				title: "metadata"
			}
			POST -> verAccount_validate {
				parameters [ id = "{AccountNumber}" ]
				title: "validate deal"
			}
			PUT -> verAccount_input {
				parameters [ id = "{AccountNumber}" ]
				title: "input deal"
			}
			POST -> verAccount_hold {
				parameters [ id = "{AccountNumber}" ]
				title: "hold deal"
			}
			POST -> verAccount_authorise {
				parameters [ id = "{AccountNumber}" ]
				title: "authorise deal"
			}
			DELETE -> verAccount_delete {
				parameters [ id = "{AccountNumber}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verAccount" ]
				title: "Context Enquiries"
			}
		}
	
	}
	
}
