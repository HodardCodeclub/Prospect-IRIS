domain T24 {
	use common.CoreCommands.*
	use common.HTTPEvents.*
	use common.ODataCommands.*
	use common.T24Commands.*
	use common.T24Events.*
	use common.NextState.*
	use common.Errors.*
	use T24.ContextEnquiry.*
	rim verEbExternalUser_TcibNew {
		command T24FieldMetadata
		command NoopGET
		command GETEntities
		command GetLiveEntity
		command GetIauthEntity
		command GetHauthEntity
		command GetIauthEntities
		command CreateEntity
		command InputEntity
		command HoldEntity
		command AuthoriseEntity
		command GetChangedValues
		command ReviewEntity
		command ReverseEntity
		command ValidateEntity
		command RestoreEntity
		command DeleteEntity
		command CopyEntity
		command PasteEntity
		command CreateDEPreview
		command GetDealSlipEntities
		command T24Enrichment
		command CheckAutoIdSupport
		command GetHauthEntities
		command T24NextState
		basepath: "/{companyid}"
	
		resource verEbExternalUser_TcibNew_errorHandler {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : NoopGET ]
			relations [ "http://temenostech.temenos.com/rels/error" ]
			path: "/verEbExternalUser_TcibNews('{id}')/error"
			GET +-> ProcessErrors {
				title: "errors"
			}
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
		}
	
		resource verEbExternalUser_TcibNews {
			type: collection
			entity: verEbExternalUser_TcibNew
			commands [ GET : GETEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verEbExternalUser_TcibNews()"
			GET *-> verEbExternalUser_TcibNew {
				parameters [ id = "{ExternalUserId}" ]
			}
			GET *-> verEbExternalUser_TcibNew_see {
				parameters [ id = "{ExternalUserId}" ]
				title: "see record"
			}
			POST -> verEbExternalUser_TcibNew_new {
				title: "create new deal"
				condition: OK(verEbExternalUser_TcibNew_autoId)
			}
			POST -> verEbExternalUser_TcibNew_populate {
				title: "populate existing deal"
			}
			PUT *-> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST *-> verEbExternalUser_TcibNew_audit {
				parameters [ id = "{ExternalUserId}" ]
				title: "audit deal"
			}
			POST *-> verEbExternalUser_TcibNew_reverse {
				parameters [ id = "{ExternalUserId}" ]
				title: "reverse deal"
			}
		}
	
		resource verEbExternalUser_TcibNew {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetLiveEntity ]
			path: "/verEbExternalUser_TcibNews('{id}')"
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			GET --> verEbExternalUser_TcibNew_IAuth {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew_IAuth)
			}
			POST -> verEbExternalUser_TcibNew_validate {
				parameters [ id = "{ExternalUserId}" ]
				title: "validate deal"
			}
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST -> verEbExternalUser_TcibNew_audit {
				parameters [ id = "{ExternalUserId}" ]
				title: "audit deal"
			}
			POST -> verEbExternalUser_TcibNew_reverse {
				parameters [ id = "{ExternalUserId}" ]
				title: "reverse deal"
			}
			GET +-> verEbExternalUser_TcibNew_dealSlips {
				parameters [ id = "{ExternalUserId}" ]
				title: "deal slips"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
		}
	
		resource verEbExternalUser_TcibNew_see {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetLiveEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verEbExternalUser_TcibNew","http://temenostech.temenos.com/rels/see" ]
			path: "/verEbExternalUser_TcibNews('{id}')/see"
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
		}
	
		resource verEbExternalUser_TcibNew_IAuth_see {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetIauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verEbExternalUser_TcibNew_IAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verEbExternalUser_TcibNews_IAuth('{id}')/see"
		}
	
		resource verEbExternalUser_TcibNew_HAuth_see {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetHauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verEbExternalUser_TcibNew_HAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verEbExternalUser_TcibNews_HAuth('{id}')/see"
		}
	
		resource verEbExternalUser_TcibNew_ContextEnquiries {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : NoopGET ]
			path: "/verEbExternalUser_TcibNew/ContextEnquiries"
			GET -> "T24.enqlistEbExternalUser.enqlistEbExternalUsers" {
				parameters [ param = "list" ]
				title: "List live deals"
			}
			GET -> "T24.enqlistEbExternalUser.enqlistEbExternalUsersUnauth" {
				parameters [ param = "list" ]
				title: "List unauthorised deals"
			}
			GET -> "T24.enqlistEbExternalUser.enqlistEbExternalUsersHist" {
				parameters [ param = "list" ]
				title: "List history deals"
			}
			GET -> "T24.enqlistEbExternalUser.enqlistEbExternalUsers" {
				title: "Search live deals"
			}
			GET -> "T24.enqlistEbExternalUser.enqlistEbExternalUsersUnauth" {
				title: "Search unauthorised deals"
			}
			GET -> "T24.enqlistEbExternalUser.enqlistEbExternalUsersHist" {
				title: "Search history deals"
			}
			GET +-> "ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Other context Enquiries"
			}
		}
	
		resource verEbExternalUser_TcibNew_metadata {
			type: collection
			entity: T24FieldMetadata
			commands [ POST : T24FieldMetadata ]
			relations [ "http://temenostech.temenos.com/rels/metadata" ]
			path: "/verEbExternalUser_TcibNews()/metadata"
		}
	
		resource verEbExternalUser_TcibNews_IAuth {
			type: collection
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetIauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verEbExternalUser_TcibNews_IAuth()"
			GET *-> verEbExternalUser_TcibNew_IAuth {
				parameters [ id = "{ExternalUserId}" ]
			}
			POST -> verEbExternalUser_TcibNew_new {
				title: "create new deal"
				condition: OK(verEbExternalUser_TcibNew_autoId)
			}
			POST -> verEbExternalUser_TcibNew_populate {
				title: "populate existing deal"
			}
			PUT *-> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			DELETE *-> verEbExternalUser_TcibNew_delete {
				parameters [ id = "{ExternalUserId}" ]
				title: "delete"
			}
			PUT *-> verEbExternalUser_TcibNew_authorise {
				parameters [ id = "{ExternalUserId}" ]
				title: "authorise deal"
			}
		}
	
		resource verEbExternalUser_TcibNew_new {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verEbExternalUser_TcibNew","http://temenostech.temenos.com/rels/new" ]
			path: "/verEbExternalUser_TcibNews()/new"
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			POST -> verEbExternalUser_TcibNew_validate {
				parameters [ id = "{ExternalUserId}" ]
				title: "validate deal"
			}
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST -> verEbExternalUser_TcibNew_hold {
				parameters [ id = "{ExternalUserId}" ]
				title: "hold deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
		}
	
		resource verEbExternalUser_TcibNew_input {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ PUT : InputEntity, POST : InputEntity ]
			relations [ "http://temenostech.temenos.com/rels/input" ]
			path: "/verEbExternalUser_TcibNews('{id}')"
			GET --> nextState {
				condition: OK(nextState)
			}
			GET --> verEbExternalUser_TcibNew_IAuth {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew_IAuth)
			}
			GET --> verEbExternalUser_TcibNew {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
			onerror --> T24.verEbExternalUser_TcibNew.verEbExternalUser_TcibNew_errorHandler
		}
	
		resource verEbExternalUser_TcibNew_hold {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : HoldEntity ]
			relations [ "http://temenostech.temenos.com/rels/hold" ]
			path: "/verEbExternalUser_TcibNews('{id}')/hold"
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			DELETE -> verEbExternalUser_TcibNew_delete {
				parameters [ id = "{ExternalUserId}" ]
				title: "delete"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verEbExternalUser_TcibNew_authorise {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ PUT : AuthoriseEntity ]
			relations [ "http://temenostech.temenos.com/rels/authorise" ]
			path: "/verEbExternalUser_TcibNews('{id}')/authorise"
			GET --> verEbExternalUser_TcibNew_IAuth {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew_IAuth)
			}
			GET --> verEbExternalUser_TcibNew {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
			onerror --> T24.verEbExternalUser_TcibNew.verEbExternalUser_TcibNew_errorHandler
		}
	
		resource verEbExternalUser_TcibNew_changedValues {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetChangedValues ]
			relations [ "http://temenostech.temenos.com/rels/changedValues" ]
			path: "/verEbExternalUser_TcibNews('{id}')/changedValues"
		}
	
		resource verEbExternalUser_TcibNew_audit {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : ReviewEntity ]
			relations [ "http://temenostech.temenos.com/rels/review" ]
			path: "/verEbExternalUser_TcibNews('{id}')/review"
			GET -> verEbExternalUser_TcibNew {
				parameters [ id = "{ExternalUserId}" ]
			}
			onerror --> common.Errors.Errors
		}
	
		resource verEbExternalUser_TcibNew_reverse {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ PUT : ReverseEntity ]
			relations [ "http://temenostech.temenos.com/rels/reverse" ]
			path: "/verEbExternalUser_TcibNews('{id}')/reverse"
			GET --> verEbExternalUser_TcibNew_IAuth {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew_IAuth)
			}
			GET --> verEbExternalUser_TcibNew_HAuth {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew_HAuth)
			}
			onerror --> T24.verEbExternalUser_TcibNew.verEbExternalUser_TcibNew_errorHandler
		}
	
		resource verEbExternalUser_TcibNew_validate {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : ValidateEntity ]
			relations [ "http://temenostech.temenos.com/rels/validate" ]
			path: "/verEbExternalUser_TcibNews('{id}')/validate"
			GET +-> ProcessErrors {
				title: "errors"
				condition: OK(CheckIfError)
			}
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST -> verEbExternalUser_TcibNew_hold {
				parameters [ id = "{ExternalUserId}" ]
				title: "hold deal"
			}
		}
	
		resource verEbExternalUser_TcibNew_IAuth {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetIauthEntity ]
			path: "/verEbExternalUser_TcibNews_IAuth('{id}')"
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			GET +-> verEbExternalUser_TcibNew_changedValues {
				parameters [ id = "{ExternalUserId}" ]
				title: "changed values"
			}
			POST -> verEbExternalUser_TcibNew_validate {
				parameters [ id = "{ExternalUserId}" ]
				title: "validate deal"
			}
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST -> verEbExternalUser_TcibNew_hold {
				parameters [ id = "{ExternalUserId}" ]
				title: "hold deal"
			}
			POST -> verEbExternalUser_TcibNew_authorise {
				parameters [ id = "{ExternalUserId}" ]
				title: "authorise deal"
			}
			DELETE -> verEbExternalUser_TcibNew_delete {
				parameters [ id = "{ExternalUserId}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
		}
	
		resource verEbExternalUser_TcibNew_delete {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ DELETE : DeleteEntity ]
			relations [ "http://temenostech.temenos.com/rels/delete" ]
			path: "/verEbExternalUser_TcibNews('{id}')/delete"
		}
	
		resource verEbExternalUser_TcibNewEntry {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : NoopGET ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verEbExternalUser_TcibNew","http://temenostech.temenos.com/rels/contract" ]
			path: "/verEbExternalUser_TcibNewEntry"
			POST -> verEbExternalUser_TcibNew_new {
				title: "create new deal"
				condition: OK(verEbExternalUser_TcibNew_autoId)
			}
			POST -> verEbExternalUser_TcibNew_populate {
				title: "populate existing deal"
			}
			GET -> "verEbExternalUser_TcibNew_see" {
				parameters [ id = "@" ]
				title: "See transaction"
			}
			GET -> "verEbExternalUser_TcibNew_IAuth_see" {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET -> "verEbExternalUser_TcibNew_HAuth_see" {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET -> "verEbExternalUser_TcibNew_IAuth" {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET -> "verEbExternalUser_TcibNew_HAuth" {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET +-> "verEbExternalUser_TcibNew_ContextEnquiries" {
				title: "All context Enquiries"
			}
			POST -> verEbExternalUser_TcibNew_copy {
				title: "Copy deal"
			}
			POST -> verEbExternalUser_TcibNew_paste {
				title: "Paste deal"
			}
		}
	
		resource verEbExternalUser_TcibNew_populate {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verEbExternalUser_TcibNew","http://temenostech.temenos.com/rels/populate" ]
			path: "/verEbExternalUser_TcibNews()/populate"
			POST -> verEbExternalUser_TcibNew_validate {
				parameters [ id = "{ExternalUserId}" ]
				title: "validate deal"
			}
			POST -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			DELETE -> verEbExternalUser_TcibNew_delete {
				parameters [ id = "{ExternalUserId}" ]
				title: "delete"
				condition: OK(verEbExternalUser_TcibNew_IAuth)
			}
			POST -> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
		}
	
		resource verEbExternalUser_TcibNew_copy {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : CopyEntity ]
			relations [ "http://temenostech.temenos.com/rels/copy" ]
			path: "/verEbExternalUser_TcibNews()/copy"
		}
	
		resource verEbExternalUser_TcibNew_paste {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : PasteEntity ]
			relations [ "http://temenostech.temenos.com/rels/paste" ]
			path: "/verEbExternalUser_TcibNews()/paste"
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			POST -> verEbExternalUser_TcibNew_validate {
				parameters [ id = "{ExternalUserId}" ]
				title: "validate deal"
			}
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST -> verEbExternalUser_TcibNew_hold {
				parameters [ id = "{ExternalUserId}" ]
				title: "hold deal"
			}
		}
	
		resource verEbExternalUser_TcibNew_dealSlips {
			type: collection
			entity: DealSlip
			commands [ GET : GetDealSlipEntities ]
			relations [ "http://temenostech.temenos.com/rels/dealSlip" ]
		}
	
		resource verEbExternalUser_TcibNews_enrichment {
			type: item
			entity: Enrichment
			commands [ GET : T24Enrichment {
				properties [ entity = "verEbExternalUser_TcibNew" ]
				} ]
			relations [ "http://temenostech.temenos.com/rels/enrichment" ]
			path: "/verEbExternalUser_TcibNews()/enrichment"
		}
	
		resource verEbExternalUser_TcibNew_autoId {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : CheckAutoIdSupport ]
		}
	
		resource verEbExternalUser_TcibNew_restore {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ POST : RestoreEntity ]
			relations [ "http://temenostech.temenos.com/rels/restore" ]
			path: "/verEbExternalUser_TcibNews('{id}')/restore"
			GET --> verEbExternalUser_TcibNew_IAuth {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew_IAuth)
			}
			GET --> verEbExternalUser_TcibNew {
				parameters [ id = "{ExternalUserId}" ]
				condition: OK(verEbExternalUser_TcibNew)
			}
			POST -> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verEbExternalUser_TcibNews_HAuth {
			type: collection
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetHauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verEbExternalUser_TcibNews_HAuth()"
			GET *-> verEbExternalUser_TcibNew_HAuth {
				parameters [ id = "{ExternalUserId}" ]
			}
			POST -> verEbExternalUser_TcibNew_new {
				title: "create new deal"
				condition: OK(verEbExternalUser_TcibNew_autoId)
			}
			POST -> verEbExternalUser_TcibNew_populate {
				title: "populate existing deal"
			}
			POST *-> verEbExternalUser_TcibNew_restore {
				parameters [ id = "{ExternalUserId}" ]
				title: "restore deal"
			}
		}
	
		resource verEbExternalUser_TcibNew_HAuth {
			type: item
			entity: verEbExternalUser_TcibNew
			commands [ GET : GetHauthEntity ]
			path: "/verEbExternalUser_TcibNews_HAuth('{id}')"
			POST +-> verEbExternalUser_TcibNew_metadata {
				title: "metadata"
			}
			POST -> verEbExternalUser_TcibNew_validate {
				parameters [ id = "{ExternalUserId}" ]
				title: "validate deal"
			}
			PUT -> verEbExternalUser_TcibNew_input {
				parameters [ id = "{ExternalUserId}" ]
				title: "input deal"
			}
			POST -> verEbExternalUser_TcibNew_hold {
				parameters [ id = "{ExternalUserId}" ]
				title: "hold deal"
			}
			POST -> verEbExternalUser_TcibNew_authorise {
				parameters [ id = "{ExternalUserId}" ]
				title: "authorise deal"
			}
			DELETE -> verEbExternalUser_TcibNew_delete {
				parameters [ id = "{ExternalUserId}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verEbExternalUser_TcibNew" ]
				title: "Context Enquiries"
			}
		}
	
	}
	
}
