domain T24 {
	use common.CoreCommands.*
	use common.HTTPEvents.*
	use common.ODataCommands.*
	use common.T24Commands.*
	use common.T24Events.*
	use common.NextState.*
	use common.Errors.*
	use T24.ContextEnquiry.*
	rim verCrContactLog_CaptureContact {
		command GETEntities
		command GetLiveEntity
		command GetIauthEntity
		command GetHauthEntity
		command NoopGET
		command T24FieldMetadata
		command GetIauthEntities
		command CreateEntity
		command InputEntity
		command HoldEntity
		command AuthoriseEntity
		command ReviewEntity
		command ReverseEntity
		command ValidateEntity
		command RestoreEntity
		command DeleteEntity
		command T24Enrichment
		command CheckAutoIdSupport
		command GetHauthEntities
		command T24NextState
		basepath: "/{companyid}"
	
		resource verCrContactLog_CaptureContacts {
			type: collection
			entity: verCrContactLog_CaptureContact
			commands [ GET : GETEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verCrContactLog_CaptureContacts()"
			GET *-> verCrContactLog_CaptureContact {
				parameters [ id = "{ClientContactLog}" ]
			}
			GET *-> verCrContactLog_CaptureContact_see {
				parameters [ id = "{ClientContactLog}" ]
				title: "see record"
			}
			POST -> verCrContactLog_CaptureContact_new {
				title: "create new deal"
				condition: OK(verCrContactLog_CaptureContact_autoId)
			}
			POST -> verCrContactLog_CaptureContact_populate {
				title: "populate existing deal"
			}
			PUT *-> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			POST *-> verCrContactLog_CaptureContact_audit {
				parameters [ id = "{ClientContactLog}" ]
				title: "audit deal"
			}
			POST *-> verCrContactLog_CaptureContact_reverse {
				parameters [ id = "{ClientContactLog}" ]
				title: "reverse deal"
			}
		}
	
		resource verCrContactLog_CaptureContact {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetLiveEntity ]
			path: "/verCrContactLog_CaptureContacts('{id}')"
			POST +-> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			GET --> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact_IAuth)
			}
			POST -> verCrContactLog_CaptureContact_validate {
				parameters [ id = "{ClientContactLog}" ]
				title: "validate deal"
			}
			PUT -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			POST -> verCrContactLog_CaptureContact_audit {
				parameters [ id = "{ClientContactLog}" ]
				title: "audit deal"
			}
			POST -> verCrContactLog_CaptureContact_reverse {
				parameters [ id = "{ClientContactLog}" ]
				title: "reverse deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContact_see {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetLiveEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCrContactLog_CaptureContact","http://temenostech.temenos.com/rels/see" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/see"
			POST +-> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
		}
	
		resource verCrContactLog_CaptureContact_IAuth_see {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetIauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCrContactLog_CaptureContact_IAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verCrContactLog_CaptureContacts_IAuth('{id}')/see"
		}
	
		resource verCrContactLog_CaptureContact_HAuth_see {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetHauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCrContactLog_CaptureContact_HAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verCrContactLog_CaptureContacts_HAuth('{id}')/see"
		}
	
		resource verCrContactLog_CaptureContact_ContextEnquiries {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : NoopGET ]
			path: "/verCrContactLog_CaptureContact/ContextEnquiries"
//			GET -> T24.enqlistCrContactLog.enqlistCrContactLogs {
//				parameters [ param = "list" ]
//				title: "List live deals"
//			}
//			GET -> T24.enqlistCrContactLog.enqlistCrContactLogsUnauth {
//				parameters [ param = "list" ]
//				title: "List unauthorised deals"
//			}
//			GET -> T24.enqlistCrContactLog.enqlistCrContactLogsHist {
//				parameters [ param = "list" ]
//				title: "List history deals"
//			}
//			GET -> T24.enqlistCrContactLog.enqlistCrContactLogs {
//				title: "Search live deals"
//			}
//			GET -> T24.enqlistCrContactLog.enqlistCrContactLogsUnauth {
//				title: "Search unauthorised deals"
//			}
//			GET -> T24.enqlistCrContactLog.enqlistCrContactLogsHist {
//				title: "Search history deals"
//			}
//			GET +-> ContextEnquiryList {
//				parameters [ entity = "verCrContactLog_CaptureContact" ]
//				title: "Other context Enquiries"
//			}
		}
	
		resource verCrContactLog_CaptureContact_metadata {
			type: collection
			entity: T24FieldMetadata
			commands [ POST : T24FieldMetadata ]
			relations [ "http://temenostech.temenos.com/rels/metadata" ]
			path: "/verCrContactLog_CaptureContacts()/metadata"
		}
	
		resource verCrContactLog_CaptureContacts_IAuth {
			type: collection
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetIauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verCrContactLog_CaptureContacts_IAuth()"
			GET *-> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "{ClientContactLog}" ]
			}
			POST -> verCrContactLog_CaptureContact_new {
				title: "create new deal"
				condition: OK(verCrContactLog_CaptureContact_autoId)
			}
			POST -> verCrContactLog_CaptureContact_populate {
				title: "populate existing deal"
			}
			PUT *-> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			DELETE *-> verCrContactLog_CaptureContact_delete {
				parameters [ id = "{ClientContactLog}" ]
				title: "delete"
			}
			PUT *-> verCrContactLog_CaptureContact_authorise {
				parameters [ id = "{ClientContactLog}" ]
				title: "authorise deal"
			}
		}
	
		resource verCrContactLog_CaptureContact_new {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCrContactLog_CaptureContact","http://temenostech.temenos.com/rels/new" ]
			path: "/verCrContactLog_CaptureContacts()/new"
			POST +-> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			POST -> verCrContactLog_CaptureContact_validate {
				parameters [ id = "{ClientContactLog}" ]
				title: "validate deal"
			}
			PUT -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			POST -> verCrContactLog_CaptureContact_hold {
				parameters [ id = "{ClientContactLog}" ]
				title: "hold deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContact_input {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ PUT : InputEntity, POST : InputEntity ]
			relations [ "http://temenostech.temenos.com/rels/input" ]
			path: "/verCrContactLog_CaptureContacts('{id}')"
//			GET --> nextState {
//				condition: OK(nextState)
//			}
			GET --> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact_IAuth)
			}
			GET --> verCrContactLog_CaptureContact {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContact_hold {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ POST : HoldEntity ]
			relations [ "http://temenostech.temenos.com/rels/hold" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/hold"
			PUT -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			DELETE -> verCrContactLog_CaptureContact_delete {
				parameters [ id = "{ClientContactLog}" ]
				title: "delete"
			}
		}
	
		resource verCrContactLog_CaptureContact_authorise {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ PUT : AuthoriseEntity ]
			relations [ "http://temenostech.temenos.com/rels/authorise" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/authorise"
			GET --> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact_IAuth)
			}
			GET --> verCrContactLog_CaptureContact {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContact_audit {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ POST : ReviewEntity ]
			relations [ "http://temenostech.temenos.com/rels/review" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/review"
			GET -> verCrContactLog_CaptureContact {
				parameters [ id = "{ClientContactLog}" ]
			}
		}
	
		resource verCrContactLog_CaptureContact_reverse {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ PUT : ReverseEntity ]
			relations [ "http://temenostech.temenos.com/rels/reverse" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/reverse"
			GET --> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact_IAuth)
			}
			GET --> verCrContactLog_CaptureContact_HAuth {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact_HAuth)
			}
		}
	
		resource verCrContactLog_CaptureContact_validate {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ POST : ValidateEntity ]
			relations [ "http://temenostech.temenos.com/rels/validate" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/validate"
			POST +-> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			PUT -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			POST -> verCrContactLog_CaptureContact_hold {
				parameters [ id = "{ClientContactLog}" ]
				title: "hold deal"
			}
		}
	
		resource verCrContactLog_CaptureContact_IAuth {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetIauthEntity ]
			path: "/verCrContactLog_CaptureContacts_IAuth('{id}')"
			POST +-> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			POST -> verCrContactLog_CaptureContact_validate {
				parameters [ id = "{ClientContactLog}" ]
				title: "validate deal"
			}
			PUT -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			POST -> verCrContactLog_CaptureContact_hold {
				parameters [ id = "{ClientContactLog}" ]
				title: "hold deal"
			}
			POST -> verCrContactLog_CaptureContact_authorise {
				parameters [ id = "{ClientContactLog}" ]
				title: "authorise deal"
			}
			DELETE -> verCrContactLog_CaptureContact_delete {
				parameters [ id = "{ClientContactLog}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContact_delete {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ DELETE : DeleteEntity ]
			relations [ "http://temenostech.temenos.com/rels/delete" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/delete"
		}
	
		resource verCrContactLog_CaptureContactEntry {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : NoopGET ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCrContactLog_CaptureContact","http://temenostech.temenos.com/rels/contract" ]
			path: "/verCrContactLog_CaptureContactEntry"
			POST -> verCrContactLog_CaptureContact_new {
				title: "create new deal"
				condition: OK(verCrContactLog_CaptureContact_autoId)
			}
			POST -> verCrContactLog_CaptureContact_populate {
				title: "populate existing deal"
			}
			GET +-> verCrContactLog_CaptureContact_see {
				parameters [ id = "@" ]
				title: "See transaction"
			}
			GET +-> verCrContactLog_CaptureContact_IAuth_see {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET +-> verCrContactLog_CaptureContact_HAuth_see {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET +-> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET +-> verCrContactLog_CaptureContact_HAuth {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET +-> verCrContactLog_CaptureContact_ContextEnquiries {
				title: "All context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContact_populate {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCrContactLog_CaptureContact","http://temenostech.temenos.com/rels/populate" ]
			path: "/verCrContactLog_CaptureContacts()/populate"
			POST -> verCrContactLog_CaptureContact_validate {
				parameters [ id = "{ClientContactLog}" ]
				title: "validate deal"
			}
			POST -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			DELETE -> verCrContactLog_CaptureContact_delete {
				parameters [ id = "{ClientContactLog}" ]
				title: "delete"
				condition: OK(verCrContactLog_CaptureContact_IAuth)
			}
			POST -> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContacts_enrichment {
			type: item
			entity: Enrichment
			commands [ GET : T24Enrichment {
				properties [ entity = "verCrContactLog_CaptureContact" ]
				} ]
			relations [ "http://temenostech.temenos.com/rels/enrichment" ]
			path: "/verCrContactLog_CaptureContacts()/enrichment"
		}
	
		resource verCrContactLog_CaptureContact_autoId {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : CheckAutoIdSupport ]
		}
	
		resource verCrContactLog_CaptureContact_restore {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ POST : RestoreEntity ]
			relations [ "http://temenostech.temenos.com/rels/restore" ]
			path: "/verCrContactLog_CaptureContacts('{id}')/restore"
			GET --> verCrContactLog_CaptureContact_IAuth {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact_IAuth)
			}
			GET --> verCrContactLog_CaptureContact {
				parameters [ id = "{ClientContactLog}" ]
				condition: OK(verCrContactLog_CaptureContact)
			}
			POST -> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCrContactLog_CaptureContacts_HAuth {
			type: collection
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetHauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verCrContactLog_CaptureContacts_HAuth()"
			GET *-> verCrContactLog_CaptureContact_HAuth {
				parameters [ id = "{ClientContactLog}" ]
			}
			POST -> verCrContactLog_CaptureContact_new {
				title: "create new deal"
				condition: OK(verCrContactLog_CaptureContact_autoId)
			}
			POST -> verCrContactLog_CaptureContact_populate {
				title: "populate existing deal"
			}
			POST *-> verCrContactLog_CaptureContact_restore {
				parameters [ id = "{ClientContactLog}" ]
				title: "restore deal"
			}
		}
	
		resource verCrContactLog_CaptureContact_HAuth {
			type: item
			entity: verCrContactLog_CaptureContact
			commands [ GET : GetHauthEntity ]
			path: "/verCrContactLog_CaptureContacts_HAuth('{id}')"
			POST +-> verCrContactLog_CaptureContact_metadata {
				title: "metadata"
			}
			POST -> verCrContactLog_CaptureContact_validate {
				parameters [ id = "{ClientContactLog}" ]
				title: "validate deal"
			}
			PUT -> verCrContactLog_CaptureContact_input {
				parameters [ id = "{ClientContactLog}" ]
				title: "input deal"
			}
			POST -> verCrContactLog_CaptureContact_hold {
				parameters [ id = "{ClientContactLog}" ]
				title: "hold deal"
			}
			POST -> verCrContactLog_CaptureContact_authorise {
				parameters [ id = "{ClientContactLog}" ]
				title: "authorise deal"
			}
			DELETE -> verCrContactLog_CaptureContact_delete {
				parameters [ id = "{ClientContactLog}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCrContactLog_CaptureContact" ]
				title: "Context Enquiries"
			}
		}
	
	}
	
}
