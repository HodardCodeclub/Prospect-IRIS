<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
	<groupId>com.temenos.examples</groupId>
	<artifactId>testds</artifactId>
	<version>1.0-SNAPSHOT</version>
    <relativePath>../Prospect-iris-parent/pom.xml</relativePath>
  </parent>

  <artifactId>Prospect-iris</artifactId>
  <name>Prospect-iris</name>
  <packaging>jar</packaging>

  <url>http://www.temenos.com</url>
  
  <properties>
    <skipRIMGeneration>true</skipRIMGeneration>
    <skipITs>true</skipITs>
    <skipTest>false</skipTest>
    <jetty.port>9081</jetty.port>
    <spring.version>3.2.13.RELEASE</spring.version>
    <iris.version>0.7.2-SNAPSHOT</iris.version>
	<!-- Default to standalone as we start the embedded jetty server for connection to TAFC -->
    <frameworkPackaging>tafc</frameworkPackaging>
	<t24FrameworkVersion>15.0.0.0</t24FrameworkVersion>
  </properties>
  
  <profiles>
    <!-- local deployment -->
    <profile>
        <id>development</id>
        <properties>
            <jboss.host>localhost</jboss.host>
            <jboss.deployDir>/Temenos/test_mb_10/Temenos/jboss/standalone/deployments/</jboss.deployDir>
            <jboss.deployUrl>file://C:/</jboss.deployUrl>
        </properties>
        <build>
        	<plugins>
		        <plugin>
			        <groupId>com.atlassian.maven.plugins</groupId>
			        <artifactId>maven-upload-plugin</artifactId>
			        <version>1.1</version>
			        <dependencies>
			        	<dependency>
				          	<groupId>org.apache.maven.wagon</groupId>
				          	<artifactId>wagon-ssh</artifactId>
				          	<version>2.4</version>
			        	</dependency>
			      	</dependencies>
	      			<configuration>
			        	<resourceSrc>
							${project.build.directory}/${project.build.finalName}.${project.packaging}
					  	</resourceSrc>
			          	<resourceDest>${jboss.deployDir}</resourceDest>
			          	<serverId>${jboss.host}</serverId>
			          	<url>${jboss.deployUrl}</url>
			        </configuration>
			      	<executions>
			     		<execution>
			     			<id>uploadToJboss</id>
			      			<phase>deploy</phase>
			      			<goals>
			      				<goal>upload</goal>
			      			</goals>
			      		</execution>
			      	</executions>
			    </plugin>
		    </plugins>
      	</build>
    </profile>
    
    <!-- Framework Specific Packaging derived from ${frameworkPackaging} -->
    <profile>
    	<id>buildForTAFCStandalone</id>
    	<activation>
    		<activeByDefault>true</activeByDefault>
    		<property>
    			<name>frameworkPackaging</name>
    			<value>standalone</value>
    		</property>
    	</activation>
    	<build>
    		<plugins>
    			<!-- Build war file for TAFC -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version><!--$NO-MVN-MAN-VER$-->
					<configuration>
						<webXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</webXml>
						<failOnMissingWebXml>true</failOnMissingWebXml>
						<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
						<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
						<warName>${project.name}</warName>
					</configuration>
			        <executions>
			         	<execution>
			         	    <id>produce-tafc-war</id>
				            <goals>
				              <goal>war</goal>
				            </goals>
				            <phase>prepare-package</phase>
						</execution>
					</executions>
				</plugin>
			  <plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.0.5.v20130815</version>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>jetty.port</name>
							<value>${jetty.port}</value>
						</systemProperty>
					</systemProperties>
					<!--
					<scanIntervalSeconds>10</scanIntervalSeconds>
					-->
					<stopPort>8005</stopPort>
					<stopKey>STOP</stopKey>
					<webApp>
						<!-- Configure the webapp root -->
						<contextPath>/Prospect-iris</contextPath>
						<resourceBases>
							<resourceBase>${project.build.directory}/${project.build.finalName}</resourceBase>
						</resourceBases>
					</webApp>
					<loginServices>
						<loginService implementation="org.eclipse.jetty.security.HashLoginService">
							<name>T24</name>
							<config>${project.build.directory}/test-classes/jetty-realm.properties</config>
						</loginService>
					</loginServices>		
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			  </plugin>

				<!-- The interaction-sdk-rim-plugin is not necessary anymore as the classes are now compiled
				   and packaged as a classifier jar of test-models-gen 
				   We enable here to make it possible to run 'mvn clean package jetty:run' in test-iris module
				-->
				<plugin>
					<groupId>com.temenos.interaction</groupId>
					<artifactId>interaction-sdk-rim-plugin</artifactId>
					<version>${iris.version}</version>
					<executions>
					  <!-- Generate the Java source from the RIM during each build -->
					  <execution>
						<phase>generate-sources</phase>
						<goals>
						  <goal>rim-generate</goal>
						</goals>
					  </execution>
					</executions>
					<configuration>
					  <!-- Override the default [targetDirectory] of ${project.build.directory}/src-gen -->
					  <targetDirectory>${basedir}/../Prospect-models-gen/src/generated/iris/iris</targetDirectory>
					  <rimSourceDir>${basedir}/../Prospect-models/rim/</rimSourceDir>
					  <skipRIMGeneration>${skipRIMGeneration}</skipRIMGeneration>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
					<executions>
					  <execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
						  <goal>add-source</goal>
						</goals>
						<configuration>
						  <sources>
							<source>${basedir}/../Prospect-models-gen/src/generated/iris/iris</source>
						  </sources>
						</configuration>
					  </execution>
					  <execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
						  <goal>add-resource</goal>
						</goals>
						<configuration>
						  <resources>
							<resource>
							  <directory>${basedir}/../Prospect-models-gen/src/generated/iris/metadata</directory>
							</resource>
						  </resources>
						</configuration>
					  </execution>
				  </executions>
				</plugin>
			</plugins>
      	</build>
		<dependencies>
			<dependency>
				<groupId>com.temenos</groupId>
				<artifactId>jremote</artifactId>
				<version>201312.0.0.0</version>
			</dependency>
			<dependency>
				<groupId>com.temenos.technology.tocft24-ra</groupId>
				<artifactId>tocfT24ra</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.jencks</groupId>
				<artifactId>jencks</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.temenos.t24.cfservice.catalog.ws</groupId>
				<artifactId>t24-CatalogService-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.temenos.t24.cfservice.resourceprovider.ws</groupId>
				<artifactId>t24-ResourceProviderService-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
		</dependencies>
	</profile>
    <profile>
    	<id>buildForTAFC</id>
    	<activation>
    		<activeByDefault>false</activeByDefault>
    		<property>
    			<name>frameworkPackaging</name>
    			<value>tafc</value>
    		</property>
    	</activation>
    	<build>
    		<plugins>
    			<!-- Build war file for TAFC -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version><!--$NO-MVN-MAN-VER$-->
					<configuration>
						<webXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</webXml>
						<failOnMissingWebXml>true</failOnMissingWebXml>
						<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
						<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
						<warName>${project.name}</warName>
					</configuration>
			        <executions>
			         	<execution>
			         	    <id>produce-tafc-war</id>
				            <goals>
				              <goal>war</goal>
				            </goals>
				            <phase>prepare-package</phase>
						</execution>
					</executions>
				</plugin>
		    </plugins>
      	</build>
		<dependencies>
			<dependency>
				<groupId>com.temenos.t24.cfservice.catalog.ws</groupId>
				<artifactId>t24-CatalogService-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.temenos.t24.cfservice.resourceprovider.ws</groupId>
				<artifactId>t24-ResourceProviderService-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
		</dependencies>
    </profile>
    <profile>
    	<id>buildForTAFJ</id>
    	<activation>
    		<activeByDefault>false</activeByDefault>
    		<property>
    			<name>frameworkPackaging</name>
    			<value>tafj</value>
    		</property>
    	</activation>
    	<build>
    		<plugins>
    			<!-- Enable TAFJ spring config in Component Provider API -->
				<!-- NOTE: Please do not remove until we come up with some other
					solution. -->
		        <plugin>
			        <groupId>org.codehaus.mojo</groupId>
			        <artifactId>truezip-maven-plugin</artifactId>
			        <version>1.1</version>
			        <executions>
			         	<execution>
			         	    <id>update-provider-springconf</id>
				            <goals>
				              <goal>copy</goal>
				            </goals>
				            <phase>package</phase>
				            <configuration>
				            	<files>
				                	<file>
				                  		<source>${basedir}/src/main/appConfig/tafj/resourceProviderServiceContext.xml</source>
				                  		<outputDirectory>${project.build.directory}/${project.build.finalName}.war/WEB-INF/lib/t24-ResourceProviderService-tafj-provider-${t24FrameworkVersion}.jar</outputDirectory>
				                	</file>
				                	<file>
				                  		<source>${basedir}/src/main/appConfig/tafj/catalogServiceContext.xml</source>
				                  		<outputDirectory>${project.build.directory}/${project.build.finalName}.war/WEB-INF/lib/t24-CatalogService-tafj-provider-${t24FrameworkVersion}.jar</outputDirectory>
				                	</file>
				              	</files>
				          	</configuration>
			          	</execution>
			        </executions>
		      </plugin>
			  
		      <!-- Build war file for TAFJ by excluding tComponentFRamework and Component Data jars -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<webXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</webXml>
						<failOnMissingWebXml>true</failOnMissingWebXml>
						<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
						<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
						<packagingExcludes>
							WEB-INF/lib/*Service-Data*jar,
							WEB-INF/lib/tComponentFramework-*.jar
						</packagingExcludes>
					</configuration>
					<executions>
			         	<execution>
			         	    <id>produce-tafj-war</id>
				            <goals>
				              <goal>war</goal>
				            </goals>
				            <phase>prepare-package</phase>
						</execution>
					</executions>
				</plugin>
		    </plugins>
      	</build>
		<dependencies>
			<!-- uses tajf specific version of the catalog and resource provider data -->
			<dependency>
				<groupId>com.temenos.t24.cfservice.catalog.ws</groupId>
				<artifactId>t24-CatalogService-tafj-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.temenos.t24.cfservice.resourceprovider.ws</groupId>
				<artifactId>t24-ResourceProviderService-tafj-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
		</dependencies>
    </profile>
    <profile>
    	<id>buildForTAFJ-Jboss5</id>
    	<activation>
    		<activeByDefault>false</activeByDefault>
    		<property>
    			<name>frameworkPackaging</name>
    			<value>tafj-jboss5</value>
    		</property>
    	</activation>
    	<build>
    		<plugins>
    			<!-- Enable TAFJ spring config in Component Provider API -->
				<!-- NOTE: Please do not remove until we come up with some other
					solution. -->
		        <plugin>
			        <groupId>org.codehaus.mojo</groupId>
			        <artifactId>truezip-maven-plugin</artifactId>
			        <version>1.1</version>
			        <executions>
			         	<execution>
			         	    <id>update-provider-springconf</id>
				            <goals>
				              <goal>copy</goal>
				            </goals>
				            <phase>package</phase>
				            <configuration>
				            	<files>
				                	<file>
				                  		<source>${basedir}/src/main/appConfig/tafj/resourceProviderServiceContext.xml</source>
				                  		<outputDirectory>${project.build.directory}/${project.build.finalName}.war/WEB-INF/lib/t24-ResourceProviderService-tafj-provider-${t24FrameworkVersion}.jar</outputDirectory>
				                	</file>
				                	<file>
				                  		<source>${basedir}/src/main/appConfig/tafj/catalogServiceContext.xml</source>
				                  		<outputDirectory>${project.build.directory}/${project.build.finalName}.war/WEB-INF/lib/t24-CatalogService-tafj-provider-${t24FrameworkVersion}.jar</outputDirectory>
				                	</file>
				              	</files>
				          	</configuration>
			          	</execution>
			        </executions>
		      </plugin>
			  
		      <!-- Build war file for TAFJ by excluding tComponentFRamework and Component Data jars -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<webXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</webXml>
						<failOnMissingWebXml>true</failOnMissingWebXml>
						<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
						<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
						<packagingExcludes>
							WEB-INF/lib/*Service-Data*jar,
							WEB-INF/lib/tComponentFramework-*.jar
						</packagingExcludes>
					</configuration>
					<executions>
			         	<execution>
			         	    <id>produce-tafj-war</id>
				            <goals>
				              <goal>war</goal>
				            </goals>
				            <phase>prepare-package</phase>
						</execution>
					</executions>
				</plugin>
		    </plugins>
      	</build>
		<dependencies>
			<!-- uses tajf specific version of the catalog and resource provider data -->
			<dependency>
				<groupId>com.temenos.t24.cfservice.catalog.ws</groupId>
				<artifactId>t24-CatalogService-tafj-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.temenos.t24.cfservice.resourceprovider.ws</groupId>
				<artifactId>t24-ResourceProviderService-tafj-provider</artifactId>
				<version>${t24FrameworkVersion}</version>
			</dependency>
		</dependencies>
    </profile>
  </profiles>

  <build>
  	<finalName>${project.artifactId}</finalName>
    <resources>
        <resource>
            <directory>src/main/resources</directory>
        </resource>
    </resources>
    <plugins>

      <plugin>
        <groupId>com.temenos.interaction</groupId>
        <artifactId>interaction-sdk-rim-plugin</artifactId>
        <version>${iris.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>rim-generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Override the default [targetDirectory] of ${project.build.directory}/src-gen
          <targetDirectory>${basedir}/src-gen</targetDirectory> 
          -->
          <rimSourceDir>${basedir}/../Prospect-models/rim/</rimSourceDir>
          <!-- Override the default [swaggerTargetDirectory] of ${project.build.directory}/swagger-gen -->
          <swaggerTargetDirectory>${project.build.directory}/${project.build.finalName}</swaggerTargetDirectory>
          
          <skipSwaggerGeneration>false</skipSwaggerGeneration>
          <skipRIMGeneration>true</skipRIMGeneration>
          <!-- Control generation of Spring XML to load generated classes  -->
          <skipRIMGenerationSpringPRD>true</skipRIMGenerationSpringPRD>          
          
        </configuration>
      </plugin>

      <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
              <execution>
      	          <id>copy-framework-specific-webapp-resources</id>
                  <phase>generate-sources</phase>
                  <goals>
                      <goal>copy-resources</goal>
                  </goals>
                  <configuration>
                      <encoding>UTF-8</encoding>
                      <overwrite>true</overwrite>
                      <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
                      <resources>          
                          <resource>
                              <directory>${basedir}/src/main/webappConfig/${frameworkPackaging}</directory>
                              <filtering>true</filtering>
                          </resource>
                      </resources>
                  </configuration>            
              </execution>
          </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals><goal>add-source</goal></goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/src-gen</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Configure the maven compiler -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      
      <!-- 
      	Unit tests are enabled by default
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skipTest}</skipTests>
          <excludes>
            <exclude>**/*ITCase*</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- 
      	Disable integration tests by default, if we want to run the tests, simply apply command as follows;
      		mvn clean verify -DskipITs=false
      -->
      <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.16</version>
          <configuration>
              <skipITs>${skipITs}</skipITs>
			  <!--
              <reuseForks>false</reuseForks>
              <forkCount>1</forkCount>
			  -->
          </configuration>
          <executions>
              <execution>
                  <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
      
	<!-- Clean framework specific deployment descriptors -->
	<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
                <filesets>
                    <fileset>
                        <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                        <includes>
                            <include>**</include>
                        </includes>
                        <followSymlinks>false</followSymlinks>
                    </fileset>
                </filesets>
            </configuration>
        </plugin>

	<!-- Enforce framework property to be provided otherwise build will fail  -->
		<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <id>enforce-property</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>frameworkPackaging</property>
                  <message>You must specify 'frameworkPackaging' for build to continue!</message>
                  <regex>(standalone|tafc|tafj|tafj-jboss5)</regex>
                  <regexMessage>You must specify '-DframeworkPackaging=XXXX' for build to continue! Possible values: standalone, tafc, tafj or tafj-jboss5</regexMessage>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>


    </plugins>

    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>com.temenos.interaction</groupId>
    								<artifactId>interaction-sdk-rim-plugin</artifactId>
    								<versionRange>[0.7.2-SNAPSHOT,)</versionRange>
    								<goals>
    									<goal>rim-generate</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>org.codehaus.mojo</groupId>
    								<artifactId>build-helper-maven-plugin</artifactId>
    								<versionRange>[1.7,)</versionRange>
    								<goals>
    									<goal>add-resource</goal>
    									<goal>add-source</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>

  <dependencies>
	<!--  T24 dependencies from maven -->
	<dependency>
		<groupId>com.temenos.technology.soaframework</groupId>
		<artifactId>tComponentFramework</artifactId>
		<version>14.0.0.0</version>
	</dependency>
	<dependency>
		<groupId>com.temenos.technology.t24commands</groupId>
		<artifactId>T24Commands</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>
	<dependency>
		<groupId>com.temenos.technology.t24producer</groupId>
		<artifactId>T24Producer</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>
	
	<!-- Image Streaming -->
	<dependency>
		<groupId>com.temenos.technology.tocfdocxfer</groupId>
		<artifactId>TOCFDocXfer</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>
	<dependency>
		<groupId>com.temenos.technology.tocfcommon</groupId>
		<artifactId>tocfcommon</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>
    
    <!--  MOCKITO DEPENDENCY FOR TESTING -->
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-all</artifactId>
		<version>1.9.0</version>
		<scope>test</scope>
	</dependency>

       <!-- URITemplate libary -->
	<dependency>
		<groupId>com.damnhandy</groupId>
		<artifactId>handy-uri-templates</artifactId>
		<version>1.1.7</version>
		<scope>test</scope>
	</dependency>

    <!-- IRIS -->
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-core</artifactId>
		<version>${iris.version}</version>
		<type>jar</type>
		<exclusions>
			<exclusion>
				<groupId>javax.xml.stream</groupId>
				<artifactId>stax-api</artifactId>
			</exclusion>
			<exclusion>
				<groupId>stax</groupId>
				<artifactId>stax-api</artifactId>
			</exclusion>
			<exclusion>
				<artifactId>eclipselink</artifactId>
				<groupId>org.eclipse.persistence</groupId>
			</exclusion>
		</exclusions>
	</dependency>
    <dependency>
    	<groupId>com.temenos.interaction</groupId>
    	<artifactId>interaction-springdsl</artifactId>
		<version>${iris.version}</version>
    	<type>jar</type>
    	<scope>runtime</scope>
    </dependency>
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-winkext</artifactId>
		<version>${iris.version}</version>
		<type>jar</type>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-commands-odata</artifactId>
		<version>${iris.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-commands-solr</artifactId>
		<version>${iris.version}</version>
		<type>jar</type>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-odata4j-ext</artifactId>
		<version>${iris.version}</version>
		<type>jar</type>
	</dependency>

	<!-- DS generated artifacts -->
	<dependency>
		<groupId>com.temenos.ds.models</groupId>
		<artifactId>Prospect-models-gen</artifactId>
		<version>${project.version}</version>
		<classifier>iris-metadata</classifier>
	</dependency>

	<!-- Resource representations -->
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-media-xhtml</artifactId>
		<version>${iris.version}</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>interaction-media-odata-xml</artifactId>
		<version>${iris.version}</version>
		<scope>runtime</scope>
	</dependency>
    <!-- Add dependency for our hal provider -->
    <dependency>
        <groupId>com.temenos.interaction</groupId>
        <artifactId>interaction-media-hal</artifactId>
		<version>${iris.version}</version>
        <scope>runtime</scope>
    </dependency>

    <!-- Add dependency for jetty-servlet Access-Control-Allow-Origin filter -->
    <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlets</artifactId>
        <version>7.6.13.v20130916</version>
        <scope>runtime</scope>
    </dependency>
	
	<!-- SPRING -->
    <!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
         spring-beans) This is the central artifact for Spring's Dependency Injection 
         Container and is generally always defined -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
		<scope>compile</scope>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring.version}</version>
		<scope>compile</scope>
	</dependency>

	<!-- Test -->
	<dependency>
		<groupId>org.odata4j</groupId>
		<artifactId>odata4j-jersey</artifactId>
		<scope>test</scope>
		<version>0.7.0</version>
	</dependency>
	<dependency>
		<groupId>com.sun.jersey</groupId>
		<artifactId>jersey-bundle</artifactId>
		<scope>test</scope>
		<version>1.10</version>
	</dependency>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<scope>test</scope>
		<version>4.8.2</version>
	</dependency>
    
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>0.9.29</version>
		<scope>runtime</scope>
	</dependency>

	<dependency>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>useragent-odata-html5</artifactId>
		<version>${iris.version}</version>
        <scope>runtime</scope>
	</dependency>
	
    <!-- Add dependency for our HAL inspector user-agent -->
    <dependency>
        <groupId>com.temenos.interaction</groupId>
        <artifactId>useragent-hal-inspector</artifactId>
		<version>${iris.version}</version>
        <scope>runtime</scope>
    </dependency>

    <!-- Add dependency for the Swagger user-agent -->
    <dependency>
        <groupId>com.temenos.interaction</groupId>
        <artifactId>useragent-swagger-ui</artifactId>
		<version>${iris.version}</version>
        <scope>runtime</scope>
    </dependency>

   	<dependency>
		<groupId>commons-pool</groupId>
		<artifactId>commons-pool</artifactId>
		<version>1.5.5</version>
	</dependency>
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	</dependency>
	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>2.6</version>
	</dependency>
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.1</version>
	</dependency>
	<dependency>
		<groupId>commons-cli</groupId>
		<artifactId>commons-cli</artifactId>
		<version>1.2</version>
	</dependency>
	<dependency>
		<groupId>org.apache.geronimo.specs</groupId>
		<artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
		<version>2.0.0</version>
	</dependency>
	<dependency>
		<groupId>com.temenos.t24.cfservice.catalog.data</groupId>
		<artifactId>t24-CatalogService-Data</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>
	<dependency>
		<groupId>com.temenos.t24.cfservice.resourceprovider.data</groupId>
		<artifactId>t24-ResourceProviderService-Data</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>

	<!-- include tajf specific versions of the catalog and resource provider data so that t24-binaries.zip is produced correctly -->
	<dependency>
		<groupId>com.temenos.t24.cfservice.catalog.ws</groupId>
		<artifactId>t24-CatalogService-tafj-provider</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>
	<dependency>
		<groupId>com.temenos.t24.cfservice.resourceprovider.ws</groupId>
		<artifactId>t24-ResourceProviderService-tafj-provider</artifactId>
		<version>${t24FrameworkVersion}</version>
	</dependency>



	<dependency>
		<groupId>com.temenos.demo</groupId>
		<artifactId>prospect-addressvalidation</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</dependency>
  </dependencies>

</project>
